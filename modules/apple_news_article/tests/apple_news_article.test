<?php

/**
 * @file
 * Contains tests for the Apple News module.
 */

use ChapterThree\AppleNewsDoc;

/**
 * Test export to Apple News Format.
 */
class AppleNewsArticleExportTestCase extends AppleNewsWebTestCase {

  /**
   * {@inheritdoc}
   */
  public static function getInfo() {
    return array(
      'name' => t('Export article as defined by default profile to Apple News Format'),
      'description' => '',
      'group' => t('Apple News'),
    );
  }

  /**
   * {@inheritdoc}
   */
  public function setUp(array $modules = array()) {
    parent::setUp(array_merge(array('apple_news_article'), $modules));
  }

  /**
   * Test default article export.
   */
  public function testExport() {
    $title = $this->randomName(32);
    $body = $this->randomName(64);
    $settings = array(
      'type' => 'article',
      'title' => $title,
      'body' => array(LANGUAGE_NONE => array(array('value' => $body))),
    );
    $node = $this->drupalCreateNode($settings);
    $this->assert($node->nid > 0, 'Node created.');

    // Load export object.
    $enabled = apple_news_export_enable('apple_news_article', 'article');
    $this->assert($enabled, 'Export enabled.');
    /** @var AppleNewsExportArticle $export */
    $export = apple_news_get_export('apple_news_article', 'article');
    $this->assert(is_a($export, 'AppleNewsExportArticle'),
      'Export object loaded.');

    // Run query to get source ids.
    /** @var EntityFieldQuery $query */
    $query = $export->query();
    $this->assert(is_a($query, 'EntityFieldQuery'), 'Query object loaded.');
    $result = $query->execute();
    $this->assert(isset($result['node'][$node->nid]), 'Query successful.');

    // Export each.
    foreach (array_keys($result['node']) as $nid) {

      $document = $export->export(node_load($nid));
      $data = json_decode($document->json());

      // $this->pass(var_export($data, TRUE));
      $this->assertEqual($node->nid, $data->identifier,
        'Export node nid -> identifier.');
      $this->assertEqual($node->title, $data->title,
        'Export node title -> title.');

      $item = $data->components[0];
      $this->assertEqual('body', $item->role, 'Export node role.');
      $this->assertEqual('markdown', $item->format, 'Export node format.');
      $mdown = AppleNewsDoc\Markdown::convert($body);
      $this->assertEqual($mdown, $item->text,
        'Export node body -> component 1 text.');

    }
  }

}
